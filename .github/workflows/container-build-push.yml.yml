name: Build and Push Docker Image


# This workflow runs on every push to the main branch
on:
  push:
    branches: [ main ]

# Environment Variables
env:
  REGISTRY: ghcr.io                        # GitHub Container Registry URL
  IMAGE_NAME: ${{ github.repository }}     # Uses repository name as image name (format: owner/repo)

jobs:
  build-and-push:
    # Run the job on the latest Ubuntu runner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # Step 1: Download the repository source code to the runner
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set up Docker Buildx for advanced build features
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Step 3: Authenticate with GitHub Container Registry
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}           
        username: ${{ github.actor }}           
        password: ${{ secrets.GITHUB_TOKEN }}   

    # Step 4: Generate Docker image tags and labels
    # This creates a tag based on the commit SHA with branch prefix (e.g., main-abc1234)
    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix={{branch}}-            # Creates tag like "main-abc1234567"

    # Step 5: Build the Docker image and push it to the registry
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .                                    # Use current directory as build context (where Dockerfile is located)
        push: true                                    
        tags: ${{ steps.meta.outputs.tags }}        
        labels: ${{ steps.meta.outputs.labels }}    
        cache-from: type=gha                          
        cache-to: type=gha,mode=max                   

    #  Step 6: Display information about the built and pushed image
    # - name: Output image details
    #   run: |
    #     echo "🎉 Image pushed successfully!"
    #     echo "📦 Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
    #     echo "🏷️  Tags: ${{ steps.meta.outputs.tags }}"
    #     echo "🔍 Digest: ${{ steps.meta.outputs.digest }}"
    
    #Step 7: Display comprehensive information about the built and pushed image
    - name: Output image details and deployment info
      run: |
        echo "🎉 Docker Image Build & Push Completed Successfully!"
        echo ""
        echo "📦 IMAGE DETAILS:"
        echo "   Registry: ${{ env.REGISTRY }}"
        echo "   Repository: ${{ env.IMAGE_NAME }}"
        echo "   Full Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "   Tags: ${{ steps.meta.outputs.tags }}"
        echo "   Digest: ${{ steps.meta.outputs.digest }}"
        echo ""
        echo "🔍 BUILD INFORMATION:"
        echo "   Triggered by: ${{ github.actor }}"
        echo "   Branch: ${{ github.ref_name }}"
        echo "   Commit SHA: ${{ github.sha }}"
        echo "   Commit Message: ${{ github.event.head_commit.message }}"
        echo "   Build Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo ""
        echo "🚀 DEPLOYMENT COMMANDS:"
        echo "   Pull Image: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
        echo "   Run Container: docker run -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
        echo ""
        echo "🔗 USEFUL LINKS:"
        echo "   Package URL: https://github.com/${{ github.repository }}/pkgs/container/${{ github.event.repository.name }}"
        echo "   Commit URL: ${{ github.event.head_commit.url }}"
        echo "   Workflow URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      # Save build cache for future runs

    # Step 6: Generate workflow summary and display comprehensive image details
    - name: Generate workflow summary
      run: |
        # Create GitHub Actions Summary (visible in workflow summary tab)
        cat >> $GITHUB_STEP_SUMMARY << 'EOF'
        # 🎉 Docker Image Build & Push Completed!
        
        ## 📦 Image Details
        | Property | Value |
        |----------|-------|
        | **Registry** | `${{ env.REGISTRY }}` |
        | **Repository** | `${{ env.IMAGE_NAME }}` |
        | **Full Image** | `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}` |
        | **Tags** | `${{ steps.meta.outputs.tags }}` |
        | **Digest** | `${{ steps.meta.outputs.digest }}` |
        
        ## 🔍 Build Information
        | Property | Value |
        |----------|-------|
        | **Triggered by** | `${{ github.actor }}` |
        | **Branch** | `${{ github.ref_name }}` |
        | **Commit SHA** | `${{ github.sha }}` |
        | **Commit Message** | `${{ github.event.head_commit.message }}` |
        | **Build Time** | `$(date -u '+%Y-%m-%d %H:%M:%S UTC')` |
        
        ## 🚀 Deployment Commands
        
        **Pull the image:**
        ```bash
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
        ```
        
        **Run the container:**
        ```bash
        docker run -p 3000:3000 -d --name my-app ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
        ```
        
        **Stop and remove container:**
        ```bash
        docker stop my-app && docker rm my-app
        ```
        
        ## 🔗 Quick Links
        - [📦 View Package](https://github.com/${{ github.repository }}/pkgs/container/${{ github.event.repository.name }})
        - [📝 View Commit](${{ github.event.head_commit.url }})
        - [⚡ View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        EOF
        
        # Also output to console for immediate visibility in step logs
        echo "🎉 Docker Image Build & Push Completed Successfully!"
        echo ""
        echo "📦 IMAGE DETAILS:"
        echo "   Registry: ${{ env.REGISTRY }}"
        echo "   Repository: ${{ env.IMAGE_NAME }}"
        echo "   Full Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "   Tags: ${{ steps.meta.outputs.tags }}"
        echo "   Digest: ${{ steps.meta.outputs.digest }}"
        echo ""
        echo "🔍 BUILD INFORMATION:"
        echo "   Triggered by: ${{ github.actor }}"
        echo "   Branch: ${{ github.ref_name }}"
        echo "   Commit SHA: ${{ github.sha }}"
        echo "   Commit Message: ${{ github.event.head_commit.message }}"
        echo "   Build Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo ""
        echo "🚀 QUICK DEPLOY COMMANDS:"
        echo "   docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
        echo "   docker run -p 3000:3000 -d --name my-app ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}"